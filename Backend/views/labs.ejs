<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Learning Center</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f3f4f6;
            /* Light background */
            margin: 0;
            /* Remove default margin */
            overflow: hidden;
            /* Prevent body scrolling */
        }
        /* Assuming TailwindCSS is used for quick styling */

body {
    background-color: #f4f4f4; /* Light background for the entire page */
}

.container {
    display: flex;
    max-width: 1200px;
    margin: 0 auto;
}

.sidebar {
    background-color: #f8fafc; /* Sidebar light grey background */
    border-right: 1px solid #e2e8f0; /* Soft border to separate */
}

.content-area {
    background-color: #fff; /* White background for content */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Soft shadow */
    border-radius: 0.375rem; /* Rounded corners */
}

.header {
    background-color: #1e40af; /* Deep blue header */
    color: white;
    padding: 16px;
    text-align: center;
}


        .header {
            background-color: #2563eb;
            /* Blue background for header */
            color: white;
            padding: 1rem;
            text-align: center;
            border-radius: 0 0 0.5rem 0.5rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
            width: 100%;
            /* Full width */
            position: fixed;
            /* Stick to top */
            top: 0;
            left: 0;
            z-index: 10;
            /* On top of other elements */
            margin-bottom: 5%;
        }

        .container {
            display: flex;
            justify-content: flex-start;
            /* Align items to the start */
            margin-top: 7rem;
            /* Space for header */
            height: calc(100vh - 4rem);
            /* Full height minus header */
            overflow: hidden;
            /* Prevent container overflow */
        }

        .sidebar {
            background-color: #ffffff;
            /* White background for sidebar */
            border-radius: 0.5rem;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            padding: 1rem;
            width: 250px;
            /* Fixed width for sidebar */
            position: sticky;
            /* Stick to the side */
            top: 0;
            /* Stay at the top */
            overflow-y: auto;
            /* Allow scrolling if content is too long */
            height: calc(100vh - 4rem);
            /* Full height minus header */
        }

        .content-area {
            background-color: #ffffff;
            /* White background for file content */
            border-radius: 0.5rem;
            /* Rounded corners */
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            /* Box shadow */
            padding: 2rem;
            /* Padding for content area */
            margin-left: 1rem;
            /* Space between sidebar and content area */
            flex-grow: 0;
            /* Prevent content area from shrinking */
            flex-basis: calc(100% - 250px);
            /* Take remaining space minus sidebar width */
            overflow-y: auto;
            /* Scrollable content */
            height: calc(100vh - 4rem);
            /* Full height minus header */
        }

        .directory-item {
            display: flex;
            /* Make folder titles square */
            align-items: center;
            justify-content: center;
            width: 150px;
            /* Fixed width for boxes */
            height: 100px;
            /* Fixed height for boxes */
            background-color: #2563eb;
            /* Blue background for folders */
            color: white;
            /* White text */
            padding: 1rem;
            /* Padding for square box */
            border-radius: 0.5rem;
            /* Rounded corners */
            margin-right: 1rem;
            /* Space between boxes */
            text-align: center;
            /* Center text */
            cursor: pointer;
            /* Pointer cursor */
            transition: background-color 0.3s ease;
            /* Smooth background color transition */
            vertical-align: top;
            /* Align boxes to the top */
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            /* Add a subtle shadow */
        }

        .directory-item:hover {
            background-color: #3b82f6;
            /* Lighter blue on hover */
        }

        .content-container {
            display: none;
            max-height: 0;
            overflow: hidden;
            /* Hide overflow for smooth animation */
            transition: max-height 0.5s ease, padding 0.5s ease;
            padding: 0;
            /* No padding initially */
        }

        .content-container.show {
            display: block;
            padding: 1rem;
            /* Add padding when visible */
            max-height: 200px;
            /* Adjust this value as needed */
        }

        h1,
        h2 {
            margin: 0;
            /* Remove default margin */
        }
    </style>
</head>

<body>
    <!-- <div class="header">
        <h1 class="text-4xl font-bold">Learning Center</h1>
        <h2 class="text-2xl font-semibold">Explore the Directory</h2>
    </div>

    <div class="container">
        <div class="sidebar">
            <div id="directory-structure" class="space-y-4">
                <div class="flex flex-wrap mb-4"> Row for directory boxes 
                    <% for (const dir in directories) { %>
                        <div class="border-b pb-2 mb-2">
                            <h2 class="text-xl font-semibold directory-item" onclick="toggleDirectory('<%= dir %>')">
                                <%= dir==='' ? 'Root Directory' : dir %>
                            </h2>
                            <div id="files-<%= dir %>" class="content-container">
                                <ul class="list-disc pl-4">
                                    <% directories[dir].files.forEach(file=> { %>
                                        <li class="cursor-pointer text-blue-500 hover:underline"
                                            onclick="fetchFileContent('<%= file.path %>','<%= file.download_url%>')">
                                            <%= file.name %>
                                        </li>
                                        <% }); %>
                                </ul>
                            </div>
                        </div>
                        <% } %>
                </div>
            </div>
        </div>

        <div class="content-area">
            <h1 class="text-3xl font-bold mb-4">File Content</h1>
            <div id="file-content" class="hidden">
                <div id="content-display" class="whitespace-pre-wrap"></div>
            </div>
        </div>
    </div> -->
    <div class="header bg-blue-600 text-white p-4">
        <h1 class="text-4xl font-bold">Learning Center</h1>
        <h2 class="text-2xl font-semibold">Explore the Directory</h2>
    </div>
    
    <div class="container flex mt-4">
        <!-- Sidebar for Directory Structure -->
        <div class="sidebar w-1/4 bg-gray-100 p-4">
            <div id="directory-structure" class="space-y-4">
                <!-- Loop through Directories -->
                <div class="mb-4">
                    <% for (const dir in directories) { %>
                        <div class="border-b pb-2 mb-2">
                            <h2 class="text-lg font-semibold cursor-pointer hover:text-blue-600" onclick="toggleDirectory('<%= dir %>')">
                                <%= dir === '' ? 'Root Directory' : dir %>
                            </h2>
                            <div id="files-<%= dir %>" class="content-container pl-4 hidden">
                                <ul class="list-disc space-y-2">
                                    <% directories[dir].files.forEach(file => { %>
                                        <li class="cursor-pointer text-blue-500 hover:underline"
                                            onclick="fetchFileContent('<%= file.path %>','<%= file.download_url %>')">
                                            <%= file.name %>
                                        </li>
                                    <% }) %>
                                </ul>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    
        <!-- Content Area -->
        <div class="content-area w-3/4 p-4">
            <h1 class="text-3xl font-bold mb-4">File Content</h1>
            <div id="file-content" class="hidden bg-white shadow-md rounded-md p-4">
                <div id="content-display" class="whitespace-pre-wrap text-sm text-gray-800"></div>
            </div>
        </div>
    </div>
    

    <script>
        function toggleDirectory(dir) {
            const contentContainer = document.getElementById(`files-${dir}`);
            // Check if the container is already displayed
            if (contentContainer.classList.contains('show')) {
                contentContainer.classList.remove('show');
                setTimeout(() => {
                    contentContainer.style.display = 'none'; // Hide after animation
                }, 500); // Match this duration with the CSS transition
            } else {
                // Close all other containers
                const allContainers = document.querySelectorAll('.content-container');
                allContainers.forEach(container => {
                    container.classList.remove('show');
                    container.style.display = 'none'; // Hide all others
                });
                contentContainer.style.display = 'block'; // Show the selected container
                setTimeout(() => {
                    contentContainer.classList.add('show'); // Trigger animation
                }, 0); // Trigger after setting display to block
            }
        }

        async function fetchFileContent(filePath, download_url) {
            const fileType = getFileType(filePath);
            const contentDisplay = document.getElementById('content-display');
            contentDisplay.innerHTML = ''; // Clear previous content
            document.getElementById('file-content').style.display = 'block'; // Show the content area
            if (fileType === 'image') {
                contentDisplay.innerHTML = `<img src="${download_url}" alt="Image" class="max-w-full h-auto rounded" />`;
            } else if (fileType === 'video') {
                contentDisplay.innerHTML = `<video controls class="max-w-full h-auto rounded"><source src="${content}" type="video/mp4">Your browser does not support the video tag.</video>`;
            } else {
                const response = await fetch(`/lab/content/${filePath}`);
                if (response.ok) {
                    const content = await response.text();
                    contentDisplay.textContent = content; // Display unsupported file type as text
                }
             else {
                document.getElementById('content-display').textContent = 'Error fetching file content';
            }
            // Clear previous content
            
        }
    
        }

        function getFileType(filePath) {
            const ext = filePath.split('.').pop().toLowerCase();
            if (['txt', 'md', 'js', 'html'].includes(ext)) {
                return 'text';
            } else if (['jpg', 'jpeg', 'png', 'gif'].includes(ext)) {
                return 'image';
            } else if (['mp4', 'webm', 'ogg'].includes(ext)) {
                return 'video';
            } else {
                return 'unknown';
            }
        }
    </script>
</body>

</html>